{"name": "test_login_002", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div[aria-hidden='false'] li[data-label='or'] a\"}\n  (Session info: chrome=114.0.5735.248); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x011EA813+48355]\n\t(No symbol) [0x0117C4B1]\n\t(No symbol) [0x01085358]\n\t(No symbol) [0x010B09A5]\n\t(No symbol) [0x010B0B3B]\n\t(No symbol) [0x010DE232]\n\t(No symbol) [0x010CA784]\n\t(No symbol) [0x010DC922]\n\t(No symbol) [0x010CA536]\n\t(No symbol) [0x010A82DC]\n\t(No symbol) [0x010A93DD]\n\tGetHandleVerifier [0x0144AABD+2539405]\n\tGetHandleVerifier [0x0148A78F+2800735]\n\tGetHandleVerifier [0x0148456C+2775612]\n\tGetHandleVerifier [0x012751E0+616112]\n\t(No symbol) [0x01185F8C]\n\t(No symbol) [0x01182328]\n\t(No symbol) [0x0118240B]\n\t(No symbol) [0x01174FF7]\n\tBaseThreadInitThunk [0x75DB00C9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77D57B4E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77D57B1E+238]", "trace": "self = <testCases.test_UserLogin.Test_UserLogin object at 0x000002683AFEE490>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"179c079f3aaaf0abdf453fd833191a41\")>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.regression\n    def test_login_002(self, setup):\n        self.log.info(\"UserLogin_test_002 start\")\n        self.driver = setup\n        self.log.info(\"Opening Browser\")\n        self.driver.get(self.url)\n        self.log.info(\"invoking the url\")\n        self.lp = UserLoginClass(self.driver)\n        self.lp.login_link()\n        self.log.info(\"Clicking link\")\n        self.lp.email(self.username)\n        self.log.info(\"Entering Username\")\n        self.lp.password(self.password)\n        self.log.info(\"Entering password\")\n        self.lp.signin_button()\n        self.log.info(\"Clicking on Signin Button\")\n>       self.lp.sign_out()\n\ntestCases\\test_UserLogin.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObject\\UserLogin_Page.py:38: in sign_out\n    self.driver.find_element(*UserLoginClass.buttonLogout_CSS_SELECTOR).click()\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:740: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002683AFDF410>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D57B4E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77D57B1E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"div[aria-hidden='false'] li[data-label='or'] a\"}\nE         (Session info: chrome=114.0.5735.248); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x011EA813+48355]\nE       \t(No symbol) [0x0117C4B1]\nE       \t(No symbol) [0x01085358]\nE       \t(No symbol) [0x010B09A5]\nE       \t(No symbol) [0x010B0B3B]\nE       \t(No symbol) [0x010DE232]\nE       \t(No symbol) [0x010CA784]\nE       \t(No symbol) [0x010DC922]\nE       \t(No symbol) [0x010CA536]\nE       \t(No symbol) [0x010A82DC]\nE       \t(No symbol) [0x010A93DD]\nE       \tGetHandleVerifier [0x0144AABD+2539405]\nE       \tGetHandleVerifier [0x0148A78F+2800735]\nE       \tGetHandleVerifier [0x0148456C+2775612]\nE       \tGetHandleVerifier [0x012751E0+616112]\nE       \t(No symbol) [0x01185F8C]\nE       \t(No symbol) [0x01182328]\nE       \t(No symbol) [0x0118240B]\nE       \t(No symbol) [0x01174FF7]\nE       \tBaseThreadInitThunk [0x75DB00C9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D57B4E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77D57B1E+238]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException"}, "attachments": [{"name": "log", "source": "cf9bc99a-87da-4868-bbae-31af22497fd4-attachment.txt", "type": "text/plain"}], "start": 1691137824533, "stop": 1691137860258, "uuid": "e7f0fa72-cc82-4543-bd74-29bdf6c33327", "historyId": "083559b012407a52e8ed004929908fa1", "testCaseId": "083559b012407a52e8ed004929908fa1", "fullName": "test_UserLogin.Test_UserLogin#test_login_002", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "regression"}, {"name": "suite", "value": "test_UserLogin"}, {"name": "subSuite", "value": "Test_UserLogin"}, {"name": "host", "value": "DESKTOP-3ABMBD4"}, {"name": "thread", "value": "15244-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_UserLogin"}]}